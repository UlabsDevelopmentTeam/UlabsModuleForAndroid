apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

version = "3.6.2"

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray{
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg{
        repo = "Ulabs"
        name = "module"
        websiteUrl = "https://github.com/UlabsDevelopmentTeam/UlabsModuleForAndroid"
        vcsUrl = "https://github.com/UlabsDevelopmentTeam/UlabsModuleForAndroid.git"
        licenses = ["Apache-2.0"]

        publish = true
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 26
        versionCode 1
        versionName "3.6.3"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

def siteUrl = 'https://github.com/UlabsDevelopmentTeam/UlabsModuleForAndroid'      // Homepage URL of the library
def gitUrl = 'https://github.com/UlabsDevelopmentTeam/UlabsModuleForAndroid.git'   // Git repository URL
group = "com.ulabs"
install{
    repositories.mavenInstaller{
        pom{
            project{
                packaging 'aar'

                name 'module'
                url siteUrl

                licenses{
                    license{
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers{
                    developer{
                        id 'ulabs'
                        name 'ljm'
                        email 'obiz.co.kr@gmail.com'
                    }
                }
                scm{
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:26.+'
    implementation 'com.android.volley:volley:1.1.0'
    implementation 'com.google.zxing:core:3.2.0'
    testImplementation 'junit:junit:4.12'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions <<{
    println project.getConvention()
}

